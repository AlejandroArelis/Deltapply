// <auto-generated />
using Deltapply.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Deltapply.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240201071438_kanji")]
    partial class kanji
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.Examples.Example", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KanjiId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KanjiId");

                    b.ToTable("Examples");
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.Examples.ExampleMeaning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExampleId")
                        .HasColumnType("int");

                    b.Property<int>("MeaningId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExampleId");

                    b.HasIndex("MeaningId");

                    b.ToTable("ExamplesMeanings");
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.Kanji", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attempts")
                        .HasColumnType("int");

                    b.Property<string>("Char")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Jlpt")
                        .HasColumnType("int");

                    b.Property<int>("Successes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Kanjis");
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.KanjiMeaning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KanjiId")
                        .HasColumnType("int");

                    b.Property<int>("MeaningId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KanjiId");

                    b.HasIndex("MeaningId");

                    b.ToTable("KanjisMeanings");
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.Kun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KanjiId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KanjiId");

                    b.ToTable("Kuns");
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.Name", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KanjiId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KanjiId");

                    b.ToTable("Names");
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.On", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KanjiId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KanjiId");

                    b.ToTable("Ons");
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Meaning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meanings");
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.Examples.Example", b =>
                {
                    b.HasOne("Deltapply.Models.Nihongo.Kanjis.Kanji", null)
                        .WithMany("Examples")
                        .HasForeignKey("KanjiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.Examples.ExampleMeaning", b =>
                {
                    b.HasOne("Deltapply.Models.Nihongo.Kanjis.Examples.Example", "Example")
                        .WithMany("Meanings")
                        .HasForeignKey("ExampleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deltapply.Models.Nihongo.Meaning", "Meaning")
                        .WithMany("Examples")
                        .HasForeignKey("MeaningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Example");

                    b.Navigation("Meaning");
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.KanjiMeaning", b =>
                {
                    b.HasOne("Deltapply.Models.Nihongo.Kanjis.Kanji", "Kanji")
                        .WithMany("Meanings")
                        .HasForeignKey("KanjiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deltapply.Models.Nihongo.Meaning", "Meaning")
                        .WithMany("Kanjis")
                        .HasForeignKey("MeaningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kanji");

                    b.Navigation("Meaning");
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.Kun", b =>
                {
                    b.HasOne("Deltapply.Models.Nihongo.Kanjis.Kanji", null)
                        .WithMany("Kuns")
                        .HasForeignKey("KanjiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.Name", b =>
                {
                    b.HasOne("Deltapply.Models.Nihongo.Kanjis.Kanji", null)
                        .WithMany("Names")
                        .HasForeignKey("KanjiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.On", b =>
                {
                    b.HasOne("Deltapply.Models.Nihongo.Kanjis.Kanji", null)
                        .WithMany("Ons")
                        .HasForeignKey("KanjiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.Examples.Example", b =>
                {
                    b.Navigation("Meanings");
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Kanjis.Kanji", b =>
                {
                    b.Navigation("Examples");

                    b.Navigation("Kuns");

                    b.Navigation("Meanings");

                    b.Navigation("Names");

                    b.Navigation("Ons");
                });

            modelBuilder.Entity("Deltapply.Models.Nihongo.Meaning", b =>
                {
                    b.Navigation("Examples");

                    b.Navigation("Kanjis");
                });
#pragma warning restore 612, 618
        }
    }
}
